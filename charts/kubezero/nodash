---
# Source: kubezero/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
---
# Source: kubezero/charts/argocd/templates/argocd-server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
---
# Source: kubezero/charts/argocd/templates/argocd-configs/argocd-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: argocd-secret
  labels:
    app.kubernetes.io/name: argocd-secret
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
type: Opaque
---
# Source: kubezero/charts/argocd/templates/argocd-configs/argocd-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  labels:
    app.kubernetes.io/name: argocd-cm
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
data:
    additionalApplications:
    - destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      name: kubezero
      namespace: argocd
      project: kubezero
      source:
        path: charts/kubezero-app
        repoURL: https://github.com/Zero-Down-Time/kubezero
        targetRevision: HEAD
      syncPolicy:
        automated:
          prune: false
          selfHeal: false
    additionalProjects:
    - description: KubeZero - ZeroDownTime Kubernetes Platform
      destinations:
      - namespace: argocd
        server: https://kubernetes.default.svc
      - namespace: kube-system
        server: https://kubernetes.default.svc
      - namespace: cert-manager
        server: https://kubernetes.default.svc
      name: kubezero
      namespace: argocd
      sourceRepos:
      - '*'
    application.instanceLabelKey: argocd.argoproj.io/instance
    url: argocd.example.com
---
# Source: kubezero/charts/argocd/templates/argocd-configs/argocd-rbac-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-rbac-cm
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
---
# Source: kubezero/charts/argocd/templates/argocd-configs/argocd-ssh-known-hosts-cm.yaml
apiVersion: v1
data:
  ssh_known_hosts: |
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
  name: argocd-ssh-known-hosts-cm
---
# Source: kubezero/charts/argocd/templates/argocd-configs/argocd-tls-certs-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-tls-certs-cm
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
  name: argocd-tls-certs-cm
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: RELEASE-NAME-argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
# Source: kubezero/charts/argocd/templates/argocd-server/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: RELEASE-NAME-argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - delete
      - get
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: default
---
# Source: kubezero/charts/argocd/templates/argocd-server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: default
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: RELEASE-NAME-argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
---
# Source: kubezero/charts/argocd/templates/argocd-server/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: RELEASE-NAME-argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: default
---
# Source: kubezero/charts/argocd/templates/argocd-server/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: default
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
spec:
  ports:
  - name: https-controller
    port: 8082
    targetPort: 8082
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: argocd-application-controller
---
# Source: kubezero/charts/argocd/templates/argocd-repo-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argocd-repo-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: repo-server
  name: RELEASE-NAME-argocd-repo-server
spec:
  ports:
  - name: https-repo-server
    protocol: TCP
    port: 8081
    targetPort: repo-server
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: argocd-repo-server
---
# Source: kubezero/charts/argocd/templates/argocd-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: server
  - name: https
    protocol: TCP
    port: 443
    targetPort: server
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: argocd-server
---
# Source: kubezero/charts/argocd/templates/redis/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-argocd-redis
  labels:
    app.kubernetes.io/name: argocd-redis
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app.kubernetes.io/name: argocd-redis
---
# Source: kubezero/charts/argocd/templates/argocd-application-controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-argocd-application-controller
  labels:
    app.kubernetes.io/name: argocd-application-controller
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/version: "v1.5.2"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/instance: RELEASE-NAME
  revisionHistoryLimit: 5
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-application-controller
        helm.sh/chart: argocd-2.2.12
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/component: application-controller
        app.kubernetes.io/version: "v1.5.2"
    spec:
      containers:
      - command:
        - argocd-application-controller
        - --status-processors
        - "20"
        - --operation-processors
        - "10"
        - --repo-server
        - RELEASE-NAME-argocd-repo-server:8081
        - --loglevel
        - info
        - --redis
        - RELEASE-NAME-argocd-redis:6379
        image: argoproj/argocd:v1.5.2
        imagePullPolicy: IfNotPresent
        name: application-controller
        ports:
        - name: controller
          containerPort: 8082
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8082
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8082
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      serviceAccountName: argocd-application-controller
---
# Source: kubezero/charts/argocd/templates/argocd-repo-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-argocd-repo-server
  labels:
    app.kubernetes.io/name: argocd-repo-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/version: "v1.5.2"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/instance: RELEASE-NAME
  revisionHistoryLimit: 5
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-repo-server
        helm.sh/chart: argocd-2.2.12
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/component: repo-server
        app.kubernetes.io/version: "v1.5.2"
    spec:
      containers:
      - name: repo-server
        image: argoproj/argocd:v1.5.2
        imagePullPolicy: IfNotPresent
        command:
        - argocd-repo-server
        - --redis
        - RELEASE-NAME-argocd-redis:6379
        - --loglevel
        - info
        volumeMounts:
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        ports:
        - name: repo-server
          containerPort: 8081
          protocol: TCP
        
        livenessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      serviceAccountName: default
      volumes:
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
---
# Source: kubezero/charts/argocd/templates/argocd-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/version: "v1.5.2"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/instance: RELEASE-NAME
  revisionHistoryLimit: 5
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
        helm.sh/chart: argocd-2.2.12
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/component: server
        app.kubernetes.io/version: "v1.5.2"
    spec:
      containers:
      - name: server
        image: argoproj/argocd:v1.5.2
        imagePullPolicy: IfNotPresent
        command:
        - argocd-server
        - --staticassets
        - /shared/app
        - --repo-server
        - RELEASE-NAME-argocd-repo-server:8081
        - --loglevel
        - info
        - --redis
        - RELEASE-NAME-argocd-redis:6379
        - --insecure
        volumeMounts:
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        ports:
        - name: server
          containerPort: 8080
          protocol: TCP
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      serviceAccountName: argocd-server
      volumes:
      - emptyDir: {}
        name: static-files
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
---
# Source: kubezero/charts/argocd/templates/redis/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-argocd-redis
  labels:
    app.kubernetes.io/name: argocd-redis
    helm.sh/chart: argocd-2.2.12
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: redis
    app.kubernetes.io/version: 5.0.3    
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-redis
        helm.sh/chart: argocd-2.2.12
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/component: redis
        app.kubernetes.io/version: 5.0.3
    spec:
      automountServiceAccountToken: false
      containers:
      - name: RELEASE-NAME-argocd-redis
        args:
        - --save
        - ""
        - --appendonly
        - "no"
        image: redis:5.0.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        resources:
          {}
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
