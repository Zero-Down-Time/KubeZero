{{- define "argo-values" }}

argo-cd:
  enabled: {{ default "false" (index .Values "argo" "argo-cd" "enabled") }}

  configs:
    {{- with index .Values "argo" "argo-cd" "configs" }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    params:
    {{- if not $.Values.global.highAvailable }}
      # Reduce load on API server on single node control plane
      controller.status.processors: 2
      controller.operation.processors: 1
      controller.kubectl.parallelism.limit: 1
    {{- else }}
      controller.status.processors: 8
      controller.operation.processors: 4
      controller.kubectl.parallelism.limit: 4
    {{- end }}

  controller:
    metrics:
      enabled: {{ .Values.metrics.enabled }}

  repoServer:
    {{- with index .Values "argo" "argo-cd" "repoServer" }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

    metrics:
      enabled: {{ .Values.metrics.enabled }}

    {{- if eq .Values.global.platform "aws" }}
    volumes:
      - name: cmp-tmp
        emptyDir: {}

    serviceAccount:
      annotations:
        kubezero.com/aws-iam-role-arn: "arn:aws:iam::{{ .Values.global.aws.accountId }}:role/{{ .Values.global.aws.region }}.{{ .Values.global.clusterName }}.argocd-repo-server"

    extraContainers:
      - name: cmp-kubezero-git-sync
        image: '{{ "{{" }} default .Values.global.image.repository .Values.repoServer.image.repository {{ "}}" }}:{{ "{{" }} default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag {{ "}}" }}'
        imagePullPolicy: '{{ "{{" }} default .Values.global.image.imagePullPolicy .Values.repoServer.image.imagePullPolicy {{ "}}" }}'
        command: ["/usr/local/bin/argocd-cmp-server"]
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: cmp-tmp
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
    {{- end }}

  server:
    metrics:
      enabled: {{ .Values.metrics.enabled }}

  {{- if and ( index .Values "argo" "argo-cd" "istio" "enabled" ) .Values.istio.enabled }}
  istio:
    {{- with index .Values "argo" "argo-cd" "istio" }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}

  {{- with index .Values "argo" "argo-cd" "kubezero" }}
  kubezero:
  {{- toYaml . | nindent 4 }}
  {{- end }}

argocd-image-updater:
  enabled: {{ default "false" (index .Values "argo" "argocd-image-updater" "enabled") }}

  {{- with omit (index .Values "argo" "argocd-image-updater") "enabled" }}
  {{- toYaml . | nindent 2 }}
  {{- end }}

  {{- if eq .Values.global.platform "aws" }}
  serviceAccount:
    annotations:
      kubezero.com/aws-iam-role-arn: "arn:aws:iam::{{ .Values.global.aws.accountId }}:role/{{ .Values.global.aws.region }}.{{ .Values.global.clusterName }}.argocd-image-updater"
  {{- end }}

  metrics:
    enabled: {{ .Values.metrics.enabled }}

{{- end }}

{{- define "argo-argo" }}
{{- end }}

{{ include "kubezero-app.app" . }}
