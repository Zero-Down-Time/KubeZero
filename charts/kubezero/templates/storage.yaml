{{- define "storage-values" }}

{{- with index .Values "storage" "lvm-localpv" }}
lvm-localpv:
  {{- toYaml . | nindent 2 }}
  prometheus:
    enabled: {{ $.Values.metrics.enabled }}
{{- end }}

{{- with .Values.storage.gemini }}
gemini:
  {{- toYaml . | nindent 2 }}
{{- end }}

{{- with .Values.storage.k8up }}
k8up:
  {{- toYaml . | nindent 2 }}
{{- end }}

snapshotController:
  # install controller if any capable storage driver is enabled
  enabled: {{ or (index .Values "storage" "lvm-localpv" "enabled") (index .Values "storage" "aws-ebs-csi-driver" "enabled")}}

{{- if eq .Values.global.platform "aws" }}
aws-ebs-csi-driver:
  enabled: {{ default false (index .Values "storage" "aws-ebs-csi-driver" "enabled")}}
  controller:
    {{- if .Values.global.highAvailable }}
    replicaCount: 2
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: ebs-csi-controller
          topologyKey: "kubernetes.io/hostname"
    {{- else }}
    podDisruptionBudget:
      enabled: false
    {{- end }}
    k8sTagClusterId: {{ .Values.global.clusterName }}
    enableMetrics: {{ .Values.metrics.enabled }}
    region: {{ .Values.global.aws.region }}
    serviceAccount:
      annotations:
        kubezero.com/aws-iam-role-arn: "arn:aws:iam::{{ .Values.global.aws.accountId }}:role/{{ .Values.global.aws.region }}.{{ .Values.global.clusterName }}.ebs-csi-controller-sa"

  node:
    enableMetrics: {{ .Values.metrics.enabled }}

  {{- if not .Values.global.highAvailable }}
  sidecars:
    provisioner:
      leaderElection:
        enabled: false
    attacher:
      leaderElection:
        enabled: false
    resizer:
      leaderElection:
        enabled: false
    volumemodifier:
      leaderElection:
        enabled: false
  {{- end }}

aws-efs-csi-driver:
  enabled: {{ default false (index .Values "storage" "aws-efs-csi-driver" "enabled")}}
  # Temp for old 1.7 chart we use atm
  replicaCount: {{ ternary 2 1 .Values.global.highAvailable }}
  controller:
    serviceaccount:
      annotations:
        kubezero.com/aws-iam-role-arn: "arn:aws:iam::{{ .Values.global.aws.accountId }}:role/{{ .Values.global.aws.region }}.{{ .Values.global.clusterName }}.efs-csi-controller-sa"

    # The EFS controller steel needs hostnetwork and cannot update on single node control planes otherwise
    {{- if not .Values.global.highAvailable }}
    updateStrategy:
      type: Recreate
    {{- else }}
    replicaCount: 2
    podDisruptionBudget:
      enabled: true
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: efs-csi-controller
          topologyKey: "kubernetes.io/hostname"
    {{- end }}

  # Dynamic Provisioning
  {{- with index .Values "storage" "aws-efs-csi-driver" "storageClasses" }}
  storageClasses:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  # Legacy static provisioning
  {{- with index .Values "storage" "aws-efs-csi-driver" "PersistentVolumes" }}
  PersistentVolumes:
  {{- toYaml . | nindent 4 }}
  {{- end }}

{{- end }}

{{- end }}

{{- define "storage-argo" }}
{{- end }}

{{ include "kubezero-app.app" . }}
